import disnake
from disnake.ext import commands
from disnake.ui import View, Button, Modal, TextInput
from disnake import ApplicationCommandInteraction, ModalInteraction

from utils.users.role_check_util import check_trust_access

class ApplicationButtonView(View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(ApplicationButton())

class ApplicationButton(Button):
    def __init__(self):
        super().__init__(label="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", style=disnake.ButtonStyle.green, custom_id="application_button")

    async def callback(self, interaction: disnake.MessageInteraction):
        blocked_role = interaction.guild.get_role(1305991288843407462)
        if blocked_role in interaction.user.roles:
            await interaction.response.send_message("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É.", ephemeral=True)
            return

        await interaction.response.send_modal(ApplicationModal())

class ApplicationModal(Modal):
    def __init__(self):
        components = [
            TextInput(label="–í–æ–∑—Ä–∞—Å—Ç, –∏–º—è, —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å", custom_id="personal", style=disnake.TextInputStyle.paragraph, required=True, max_length=50),
            TextInput(label="–û–Ω–ª–∞–π–Ω –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ", custom_id="activity", style=disnake.TextInputStyle.paragraph, required=True, max_length=100),
            TextInput(label="–û–ø—ã—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏, –ø—Ä–∏—á–∏–Ω—ã —É—Ö–æ–¥–∞", custom_id="experience", style=disnake.TextInputStyle.paragraph, required=True, max_length=500),
            TextInput(label="–ß—Ç–æ —Ç–∞–∫–æ–µ —Ñ–ª—É–¥? –û–±—ä—è—Å–Ω–∏—Ç–µ —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏.", custom_id="communication", style=disnake.TextInputStyle.paragraph, required=True, max_length=150),
            TextInput(label="–ó–Ω–∞–Ω–∏–µ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª —Å–µ—Ä–≤–µ—Ä–∞", custom_id="rules", style=disnake.TextInputStyle.paragraph, required=True, max_length=50),
        ]
        super().__init__(title="–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª", components=components)

    async def callback(self, interaction: ModalInteraction):
        channel = interaction.bot.get_channel(1372568284830109758)
        embed = disnake.Embed(description=f"## üì® –ó–∞—è–≤–∫–∞ –æ—Ç {interaction.user.mention}", color=disnake.Color.dark_blue())
        embed.set_thumbnail(url=interaction.user.display_avatar.url)
        embed.add_field(name="–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", value=interaction.text_values['personal'], inline=True)
        embed.add_field(name="–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", value=interaction.text_values['activity'], inline=True)
        embed.add_field(name="–û–ø—ã—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏", value=interaction.text_values['experience'], inline=True)
        embed.add_field(name="–ü–æ–Ω–∏–º–∞–Ω–∏–µ —Ñ–ª—É–¥–∞", value=interaction.text_values['communication'], inline=True)
        embed.add_field(name="–ó–Ω–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª", value=interaction.text_values['rules'], inline=True)

        if channel:
            await channel.send(embed=embed, view=PersistentReviewView(applicant_id=interaction.user.id))
            await interaction.response.send_message("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ!", ephemeral=True)

class PersistentReviewView(View):
    def __init__(self, applicant_id=None):
        super().__init__(timeout=None)
        self.applicant_id = applicant_id
        self.add_item(Button(label="–ü—Ä–∏–Ω—è—Ç—å", style=disnake.ButtonStyle.green, custom_id="accept_application"))
        self.add_item(Button(label="–û—Ç–∫–∞–∑–∞—Ç—å", style=disnake.ButtonStyle.red, custom_id="reject_application"))

class InStaffTicketCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_ready(self):
        self.bot.add_view(ApplicationButtonView())
        self.bot.add_view(PersistentReviewView())

    @commands.Cog.listener()
    async def on_button_click(self, interaction: disnake.MessageInteraction):
        if interaction.component.custom_id in ["accept_application", "reject_application"]:
            embed = interaction.message.embeds[0]
            mention = embed.description.split(" –æ—Ç ")[-1]
            user_id = int(mention.strip("<@!>"))
            user = interaction.guild.get_member(user_id)

            fields_text = ""
            for field in embed.fields:
                fields_text += f"**{field.name}:**\n{field.value}\n\n"

            if interaction.component.custom_id == "accept_application":
                roles_to_add = [1251855717686575144, 1251855556222914650]
                for role_id in roles_to_add:
                    role = interaction.guild.get_role(role_id)
                    if role:
                        await user.add_roles(role, reason="–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞")

                embed_dm = disnake.Embed(
                    description=f"## –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª\n–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: \n```{fields_text}```\n\n**–†–µ—à–µ–Ω–∏–µ:** –ü—Ä–∏–Ω—è—Ç",
                    color=disnake.Color.light_grey()
                )
                embed_dm.set_thumbnail(url=interaction.user.display_avatar.url)
                try:
                    await user.send(embed=embed_dm)
                except:
                    await interaction.send("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.", ephemeral=True)

                await interaction.send("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω—è—Ç.", ephemeral=True)

            elif interaction.component.custom_id == "reject_application":
                deny_role = interaction.guild.get_role(1305991288843407462)
                if deny_role:
                    await user.add_roles(deny_role, reason="–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")

                embed_dm = disnake.Embed(
                    description=f"## –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª\n–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: \n```{fields_text}```\n\n**–†–µ—à–µ–Ω–∏–µ:** –û—Ç–∫–∞–∑",
                    color=disnake.Color.light_grey()
                )
                embed_dm.set_thumbnail(url=interaction.user.display_avatar.url)
                try:
                    await user.send(embed=embed_dm)
                except:
                    await interaction.send("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.", ephemeral=True)

                await interaction.send("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª–æ–Ω—ë–Ω.", ephemeral=True)

            await interaction.message.edit(view=None)

    @commands.slash_command(name="in_staff", description="–°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∞")
    async def in_staff(self, inter: ApplicationCommandInteraction):
        if not await check_trust_access(inter):
            return

        await inter.response.defer(ephemeral=True)

        embed = disnake.Embed(
            title="Excellent Staff",
            description=(
                "–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. –û—Ç–≤–µ—Ç –æ—Ç –ö—É—Ä–∞—Ç–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –ø–æ—Å—Ç—É–ø–∏—Ç –≤–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –±–æ—Ç–∞ ‚Äî —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –≤–∫–ª—é—á–µ–Ω—ã –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\n\n"
                ":exclamation: **–ö—Ä–∏—Ç–µ—Ä–∏–∏:**\n\n "
                "–í–æ–∑—Ä–∞—Å—Ç –æ—Ç 15 –ª–µ—Ç \n - –¢—Ä–µ–±—É–µ—Ç—Å—è –±–∞–∑–æ–≤–∞—è –∑—Ä–µ–ª–æ—Å—Ç—å, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤–µ—Å—Ç–∏ —Å–ø–æ–∫–æ–π–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ.\n\n"
                "–ì—Ä–∞–º–æ—Ç–Ω–∞—è –ø–∏—Å—å–º–µ–Ω–Ω–∞—è —Ä–µ—á—å\n - –£–º–µ–Ω–∏–µ —á–µ—Ç–∫–æ, –ø–æ–Ω—è—Ç–Ω–æ –∏ –±–µ–∑ –≥—Ä—É–±—ã—Ö –æ—à–∏–±–æ–∫ –∏–∑–ª–∞–≥–∞—Ç—å –º—ã—Å–ª–∏.\n\n"
                "–ê–¥–µ–∫–≤–∞—Ç–Ω–æ—Å—Ç—å \n - –°–ø–æ–∫–æ–π–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö, —É–º–µ–Ω–∏–µ –Ω–µ –ø–æ–¥–¥–∞–≤–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–∏.\n\n"
                "–û–Ω–ª–∞–π–Ω-–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å \n - –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –¥–ª—è –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Ç–∏–∫–µ—Ç—ã –∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ —á–∞—Ç–æ–º.\n\n"
                "–ë–∞–∑–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª —Å–µ—Ä–≤–µ—Ä–∞ \n - –£–º–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å –∏ –æ–±—ä—è—Å–Ω—è—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º."
            ),
            color=disnake.Color.red()
        )

        await inter.channel.send(embed=embed, view=ApplicationButtonView())
        await inter.followup.send("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.", ephemeral=True)

def setup(bot):
    bot.add_cog(InStaffTicketCog(bot))
